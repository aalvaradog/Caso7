package caso7;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
public class Caso7 {

	public static void main(String[] args) {
		final String TextoEncriptado="xZwM7BWIpSjYyGFr9rhpEa+cYVtACW7yQKmyN6OYSCv0ZEg9jWbc6lKzzCxRSSIvOvlimQZBMZOYnOwiA9yy3YU8zk4abFSItoW6Wj0ufQ0=";
		final String PrimerParteLlave="29dh120";
		final String SegundaParteLlave="dk1";
		final String TercerParteLlave="3";
		
		char letras[]= { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z' };
		char numeros[]= { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
		
		ArrayList<String> listaLetras=new ArrayList<String>();
		ArrayList<String> listaNum=new ArrayList<String>();
		
		for(int i=0;i<letras.length;i++) {
			listaLetras.add(Character.toString(letras[i]));
		}
		for(int i=0;i<numeros.length;i++) {
			listaNum.add(Character.toString(numeros[i]));
		}
		
		int numEjecuciones=5;
		for(int iteraciones=0;iteraciones<numEjecuciones;iteraciones++) {
			LinkedList<grupo> listaGrupos=new LinkedList<grupo>();
			LinkedList<Integer> gruposExito=new LinkedList<>();
			//se crean los grupos
			for(int i=0;i<5;i++) {
				grupo nuevoAInsertar=new grupo();
				while(nuevoAInsertar.letrasSeleccionadas.size()<5) {
					nuevoAInsertar.letrasSeleccionadas.add((listaLetras.get((int)(Math.random()*26)).charAt(0)));
				}
				while(nuevoAInsertar.numerosSeleccionados.size()<2) {
					nuevoAInsertar.numerosSeleccionados.add(listaNum.get((int)(Math.random()*10)).charAt(0));
				}
				listaGrupos.add(nuevoAInsertar);
				
				//System.out.println(listaGrupos.get(i).letrasSeleccionadas.toString());
			}
			//se analiza cuales grupos podrian ser utiles
			int cantidadAnalisis=(int)(Math.random()*5);
			for(int i=0;i<5;i++) {
				String probar="";
				for(char letra:listaGrupos.get(i).letrasSeleccionadas) {
					for(char num:listaGrupos.get(i).numerosSeleccionados) {
						probar=PrimerParteLlave+letra+SegundaParteLlave+num+TercerParteLlave;			
						String respuesta=desEncriptar.decrypt(TextoEncriptado, probar);
						if(!(respuesta==null)) {
							gruposExito.add(i);
						}
					}
				}
			}
			System.out.println("-----Grupos útiles-----");
			System.out.println(gruposExito.toString());//Indices de los grupos útiles
			grupo union=new grupo();
			//se actualizan los arreglos de letras y numeros con los resultados obtenidos
			for(int i=0;i<gruposExito.size();i++) {			
				System.out.println(listaGrupos.get(gruposExito.get(i)).letrasSeleccionadas.toString());
				System.out.println(listaGrupos.get(gruposExito.get(i)).numerosSeleccionados.toString());
				Object[] letrasUp=(listaGrupos.get(gruposExito.get(i)).letrasSeleccionadas.toArray());
				Object[] numerosUp=(listaGrupos.get(gruposExito.get(i)).numerosSeleccionados.toArray());
				for(int j=0;j<letrasUp.length;j++) {
					union.letrasSeleccionadas.add((char)letrasUp[j]);
					listaLetras.add(Character.toString((char)(letrasUp[j])));//ingresa las letras utiles al arreglo de letras
				}
				for(int j=0;j<numerosUp.length;j++) {
					union.numerosSeleccionados.add((char)(numerosUp[j]));
					listaNum.add(Character.toString((char)(numerosUp[j])));//ingresa los numeros utiles al arreglo de numeros
				}
			}
			System.out.println("-------------------");
		//Vuelve a revisar el los arreglos esta vez con la letras y numeros que fueron utiles
		}
	for(int i=0;i<listaLetras.size();i++) {
		System.out.println(listaLetras.get(i));
	}
	}
}
